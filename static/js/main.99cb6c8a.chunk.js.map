{"version":3,"sources":["utils/create-section-label.js","utils/fetch-sections.js","utils/scroll-to-element.js","utils/use-refs-map.js","PageHeader.js","theme.js","GlobalStyle.js","Card.js","UsingIDsExample/Section.js","SectionNavigationBox.js","UsingIDsExample/Navigation.js","UsingIDsExample/index.js","UsingIDsExample/UsingIDsExample.js","UsingCountersExample/Section.js","UsingCountersExample/Navigation.js","UsingCountersExample/UsingCountersExample.js","UsingCountersExample/index.js","UsingMessageExample/Section.js","UsingMessageExample/Navigation.js","UsingMessageExample/index.js","UsingMessageExample/UsingMessagesExample.js","UsingRefsExample/Section.js","UsingRefsExample/Navigation.js","UsingStateExample/Section.js","UsingStateExample/Navigation.js","App.js","UsingStateExample/UsingStateExample.js","UsingRefsExample/UsingRefsExample.js","index.js"],"names":["createSectionLabel","section","id","toUpperCase","fetchSections","firstIndex","Math","floor","random","map","addition","scrollToElement","node","scrollIntoView","behavior","block","useRefsMap","sections","idKey","refsMap","React","useMemo","reduce","acc","createRef","PageHeader","onChangeSections","Box","as","pad","elevation","direction","justify","Heading","color","size","margin","Button","icon","label","onClick","theme","global","font","family","height","GlobalStyle","createGlobalStyle","Card","forwardRef","ref","background","fill","round","level","Section","SectionNavigationBox","children","gap","top","Navigation","key","document","getElementById","UsingIDsExample","scrollCounter","useRef","useEffect","current","onNavClick","createCountersMap","UsingCountersExample","useState","countersMap","setCountersMap","scrollMessage","UsingMessagesExample","message","setMessage","cardRef","useImperativeHandle","scrollSectionId","onSectionScrolled","EXAMPLES","title","component","setScrollSectionId","handleSectionScrolled","useCallback","UsingMessageExample","App","setSections","StrictMode","Grommet","full","Tabs","Component","Tab","ReactDOM","render"],"mappings":"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","file":"static/js/main.99cb6c8a.chunk.js","sourcesContent":["const createSectionLabel = section => `Section ${section.id.toUpperCase()}`;\n\nexport default createSectionLabel;\n","const fetchSections = () => {\n  const firstIndex = Math.floor(Math.random() * 10 + 1);\n  return [0, 1, 2, 3].map(addition => ({ id: `${firstIndex + addition}` }));\n};\n\nexport default fetchSections;\n","// Could do this like window.scrollTo(0, refsMap[id].current.offsetTop);\n\nconst scrollToElement = node =>\n  node.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n\nexport default scrollToElement;\n","import React from \"react\";\n\nconst useRefsMap = (sections, idKey = \"id\") => {\n  const refsMap = React.useMemo(\n    () =>\n      sections.reduce((acc, section) => {\n        acc[section[idKey]] = React.createRef();\n        return acc;\n      }, {}),\n    [sections, idKey]\n  );\n\n  return refsMap;\n};\n\nexport default useRefsMap;\n","import React from \"react\";\nimport { Box, Button, Heading } from \"grommet\";\nimport * as Icons from \"grommet-icons\";\n\nconst PageHeader = ({ onChangeSections }) => (\n  <Box\n    as=\"header\"\n    pad=\"medium\"\n    elevation=\"medium\"\n    direction=\"row-responsive\"\n    justify=\"between\"\n  >\n    <Heading color=\"dark-1\" size=\"small\" margin=\"small\">\n      Imperative React.js\n    </Heading>\n    <Button\n      icon={<Icons.Refresh />}\n      label=\"Change Sections\"\n      onClick={onChangeSections}\n    />\n  </Box>\n);\n\nexport default PageHeader;\n","const theme = {\n  global: {\n    font: {\n      family: \"Roboto\",\n      size: \"16px\",\n      height: \"22px\"\n    }\n  }\n};\n\nexport default theme;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport { Box, Heading } from \"grommet\";\n\nconst Card = React.forwardRef(({ label, id }, ref) => (\n  <Box\n    ref={ref}\n    as=\"section\"\n    background=\"neutral-2\"\n    elevation=\"large\"\n    fill=\"horizontal\"\n    height=\"medium\"\n    pad=\"medium\"\n    round=\"medium\"\n    id={id}\n  >\n    <Heading level={2} margin=\"none\" size=\"small\">\n      {label}\n    </Heading>\n  </Box>\n));\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../Card\";\nimport { createSectionLabel } from \"../utils\";\n\nconst Section = ({ section }) => (\n  <Card id={section.id} label={createSectionLabel(section)} />\n);\n\nexport default Section;\n","import React from \"react\";\nimport { Box } from \"grommet\";\n\nconst SectionNavigationBox = ({ children }) => (\n  <Box\n    as=\"nav\"\n    direction=\"row-responsive\"\n    justify=\"center\"\n    gap=\"small\"\n    margin={{ top: \"medium\" }}\n  >\n    {children}\n  </Box>\n);\n\nexport default SectionNavigationBox;\n","import React from \"react\";\nimport { Button } from \"grommet\";\nimport SectionNavigationBox from \"../SectionNavigationBox\";\nimport { createSectionLabel, scrollToElement } from \"../utils\";\n\nconst Navigation = ({ sections }) => (\n  <SectionNavigationBox>\n    {sections.map(section => (\n      <Button\n        key={section.id}\n        label={`To ${createSectionLabel(section)}`}\n        onClick={() => scrollToElement(document.getElementById(section.id))}\n      />\n    ))}\n  </SectionNavigationBox>\n);\n\nexport default Navigation;\n","import UsingIDsExample from \"./UsingIDsExample\";\nexport default UsingIDsExample;\n","import React from \"react\";\nimport { Box } from \"grommet\";\nimport Section from \"./Section\";\nimport Navigation from \"./Navigation\";\n\nconst UsingIDsExample = ({ sections }) => (\n  <Box gap=\"medium\">\n    <Navigation sections={sections} />\n    <Box gap=\"large\">\n      {sections.map(section => (\n        <Section key={section.id} section={section} />\n      ))}\n    </Box>\n  </Box>\n);\n\nexport default UsingIDsExample;\n","import React from \"react\";\nimport Card from \"../Card\";\nimport { createSectionLabel, scrollToElement } from \"../utils\";\n\nconst Section = ({ section, scrollCounter }) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    if (scrollCounter > 0) {\n      scrollToElement(ref.current);\n    }\n  }, [scrollCounter]);\n\n  return <Card ref={ref} label={createSectionLabel(section)} />;\n};\n\nexport default Section;\n","import React from \"react\";\nimport { Button } from \"grommet\";\nimport SectionNavigationBox from \"../SectionNavigationBox\";\nimport { createSectionLabel } from \"../utils\";\n\nconst Navigation = ({ sections, onNavClick }) => (\n  <SectionNavigationBox>\n    {sections.map(section => (\n      <Button\n        key={section.id}\n        label={`To ${createSectionLabel(section)}`}\n        onClick={() => onNavClick(section.id)}\n      />\n    ))}\n  </SectionNavigationBox>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport { Box } from \"grommet\";\nimport Section from \"./Section\";\nimport Navigation from \"./Navigation\";\n\nconst createCountersMap = sections =>\n  sections.reduce((acc, section) => {\n    acc[section.id] = 0;\n    return acc;\n  }, {});\n\nconst UsingCountersExample = ({ sections }) => {\n  const [countersMap, setCountersMap] = React.useState(() =>\n    createCountersMap(sections)\n  );\n\n  React.useEffect(() => {\n    setCountersMap(createCountersMap(sections));\n  }, [sections]);\n\n  const handleNavClick = id =>\n    setCountersMap(countersMap => ({\n      ...countersMap,\n      [id]: countersMap[id] + 1\n    }));\n\n  return (\n    <Box gap=\"medium\">\n      <Navigation sections={sections} onNavClick={handleNavClick} />\n      <Box gap=\"large\">\n        {sections.map(section => (\n          <Section\n            key={section.id}\n            section={section}\n            scrollCounter={countersMap[section.id]}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default UsingCountersExample;\n","import UsingCountersExample from \"./UsingCountersExample\";\nexport default UsingCountersExample;\n","import React from \"react\";\nimport Card from \"../Card\";\nimport { createSectionLabel, scrollToElement } from \"../utils\";\n\nconst Section = ({ section, scrollMessage }) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    if (scrollMessage !== null && scrollMessage.id === section.id) {\n      scrollToElement(ref.current);\n    }\n  }, [scrollMessage]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return <Card ref={ref} label={createSectionLabel(section)} />;\n};\n\nexport default Section;\n","import React from \"react\";\nimport { Button } from \"grommet\";\nimport SectionNavigationBox from \"../SectionNavigationBox\";\nimport { createSectionLabel } from \"../utils\";\n\nconst Navigation = ({ sections, onNavClick }) => (\n  <SectionNavigationBox>\n    {sections.map(section => (\n      <Button\n        key={section.id}\n        label={`To ${createSectionLabel(section)}`}\n        onClick={() => onNavClick(section.id)}\n      />\n    ))}\n  </SectionNavigationBox>\n);\n\nexport default Navigation;\n","import UsingMessagesExample from \"./UsingMessagesExample\";\nexport default UsingMessagesExample;\n","import React from \"react\";\nimport { Box } from \"grommet\";\nimport Section from \"./Section\";\nimport Navigation from \"./Navigation\";\n\nconst UsingMessageExample = ({ sections }) => {\n  const [message, setMessage] = React.useState(null);\n\n  const handleNavClick = id => setMessage({ id });\n\n  return (\n    <Box gap=\"medium\">\n      <Navigation sections={sections} onNavClick={handleNavClick} />\n      <Box gap=\"large\">\n        {sections.map(section => (\n          <Section key={section.id} section={section} scrollMessage={message} />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default UsingMessageExample;\n","import React from \"react\";\nimport Card from \"../Card\";\nimport { createSectionLabel, scrollToElement } from \"../utils\";\n\nconst Section = React.forwardRef(({ section }, ref) => {\n  const cardRef = React.useRef();\n\n  React.useImperativeHandle(ref, () => ({\n    scrollToElement: () => {\n      scrollToElement(cardRef.current);\n    }\n  }));\n\n  return <Card ref={cardRef} label={createSectionLabel(section)} />;\n});\n\nexport default Section;\n","import React from \"react\";\nimport { Button } from \"grommet\";\nimport SectionNavigationBox from \"../SectionNavigationBox\";\nimport { createSectionLabel } from \"../utils\";\n\nconst Navigation = ({ sections, onNavClick }) => (\n  <SectionNavigationBox>\n    {sections.map(section => (\n      <Button\n        key={section.id}\n        label={`To ${createSectionLabel(section)}`}\n        onClick={() => onNavClick(section.id)}\n      />\n    ))}\n  </SectionNavigationBox>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport Card from \"../Card\";\nimport { createSectionLabel, scrollToElement } from \"../utils\";\n\nconst Section = ({ section, scrollSectionId, onSectionScrolled }) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    if (scrollSectionId !== null && scrollSectionId === section.id) {\n      scrollToElement(ref.current);\n      onSectionScrolled();\n    }\n  }, [section, scrollSectionId, onSectionScrolled]);\n\n  return <Card ref={ref} label={createSectionLabel(section)} />;\n};\n\nexport default Section;\n","import React from \"react\";\nimport { Button } from \"grommet\";\nimport SectionNavigationBox from \"../SectionNavigationBox\";\nimport { createSectionLabel } from \"../utils\";\n\nconst Navigation = ({ sections, onNavClick }) => (\n  <SectionNavigationBox>\n    {sections.map(section => (\n      <Button\n        key={section.id}\n        label={`To ${createSectionLabel(section)}`}\n        onClick={() => onNavClick(section.id)}\n      />\n    ))}\n  </SectionNavigationBox>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport { Box, Grommet, Tab, Tabs } from \"grommet\";\nimport { fetchSections } from \"./utils\";\nimport PageHeader from \"./PageHeader\";\nimport theme from \"./theme\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport UsingIDsExample from \"./UsingIDsExample\";\nimport UsingCountersExample from \"./UsingCountersExample\";\nimport UsingMessageExample from \"./UsingMessageExample\";\nimport UsingRefsExample from \"./UsingRefsExample\";\nimport UsingStateExample from \"./UsingStateExample\";\n\nconst EXAMPLES = [\n  { title: \"Using IDs\", component: UsingIDsExample },\n  { title: \"Using Counters\", component: UsingCountersExample },\n  { title: \"Using State\", component: UsingStateExample },\n  { title: \"Using Refs\", component: UsingRefsExample },\n  { title: \"Using Messages\", component: UsingMessageExample }\n];\n\nconst App = () => {\n  const [sections, setSections] = React.useState(() => fetchSections());\n\n  return (\n    <React.StrictMode>\n      <GlobalStyle />\n      <Grommet full theme={theme}>\n        <PageHeader onChangeSections={() => setSections(fetchSections())} />\n        <Box as=\"main\" pad=\"medium\">\n          <Tabs>\n            {EXAMPLES.map(({ title, component: Component }) => (\n              <Tab key={title} title={title}>\n                <Component sections={sections} />\n              </Tab>\n            ))}\n          </Tabs>\n        </Box>\n      </Grommet>\n    </React.StrictMode>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { Box } from \"grommet\";\nimport Section from \"./Section\";\nimport Navigation from \"./Navigation\";\n\nconst UsingStateExample = ({ sections }) => {\n  const [scrollSectionId, setScrollSectionId] = React.useState(null);\n\n  const handleSectionScrolled = React.useCallback(\n    () => setScrollSectionId(null),\n    [setScrollSectionId]\n  );\n\n  return (\n    <Box gap=\"medium\">\n      <Navigation sections={sections} onNavClick={setScrollSectionId} />\n      <Box gap=\"large\">\n        {sections.map(section => (\n          <Section\n            key={section.id}\n            section={section}\n            scrollSectionId={scrollSectionId}\n            onSectionScrolled={handleSectionScrolled}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default UsingStateExample;\n","import React from \"react\";\nimport { Box } from \"grommet\";\nimport { useRefsMap } from \"../utils\";\nimport Section from \"./Section\";\nimport Navigation from \"./Navigation\";\n\nconst UsingRefsExample = ({ sections }) => {\n  const refsMap = useRefsMap(sections);\n\n  const handleNavClick = id => refsMap[id].current.scrollToElement();\n\n  return (\n    <Box gap=\"medium\">\n      <Navigation sections={sections} onNavClick={handleNavClick} />\n      <Box gap=\"large\">\n        {sections.map(section => (\n          <Section\n            key={section.id}\n            section={section}\n            ref={refsMap[section.id]}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default UsingRefsExample;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}